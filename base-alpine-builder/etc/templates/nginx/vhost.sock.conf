upstream rails_app {
    server unix://data/app/tmp/web.sock fail_timeout=0;
}

server {
    listen 80 default_server;
    server_name _;
    root /data/app/public;

    #error_page 404 /404.html;
    #error_page 500 502 503 504 /500.html;
    # Only intercept errors that the app does not normally generate -Nic 2011-01-07
    error_page 502 503 504 /500.html;

    # POST requests to a static page result in a 405. This happens when logging in from the
    # www sign-in link when the maintenance page is up. This directive changes the request
    # to a GET and retries -- which then results in serving the maintenance page.
    error_page 405 = $uri;

    # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
    location ~ "^/(assets|images|eum|javascripts|stylesheets|skin|fusion_charts|sprockets|fusion_charts_v2|flash)/" {
        expires max;
        add_header Cache-Control public;
    }

    # load balancer health check
    location = /status/nginx {
        return 204;
    }

  # try static files or index pages. if doesn't exist proxy to app server
  try_files $uri $uri/index.html /system/maintenance.html @app_server;

  location @app_server {
    access_log /dev/stdout combined buffer=4096;

    proxy_set_header Host               $http_host;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

    proxy_buffering         on;
    proxy_buffer_size       32k;
    proxy_buffers           128 32k;

    proxy_redirect          off;
    proxy_read_timeout      120;
    proxy_connect_timeout   75;
    proxy_send_timeout      90;
    proxy_intercept_errors  on;

    proxy_pass http://rails_app;
  }
}
